"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –±–æ—Ç–∞
"""
import logging
from datetime import datetime, timedelta
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ConversationHandler
from telegram import Update
from telegram.ext import ContextTypes

# –ò–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π
from config import BOT_TOKEN, BUDAPEST_TZ, ADMIN_GROUP_ID
from database import clear_daily_data, users_db
from handlers import registration, commands, callbacks, admin, tasks

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
(REG_INSTAGRAM, REG_THREADS, REG_GENDER, REG_AGE) = range(4)


async def reset_daily(context):
    """–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Å–±—Ä–æ—Å –≤ 20:00"""
    logger.info(f"Daily reset at {datetime.now(BUDAPEST_TZ)}")
    clear_daily_data()
    
    for user_id in users_db.keys():
        try:
            await context.bot.send_message(
                chat_id=user_id,
                text="üåô –ù–æ–≤—ã–π –¥–µ–Ω—å! –¢—Ä–∏–∫—Å–∏–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã.\n–ò—Å–ø–æ–ª—å–∑—É–π /daily!"
            )
        except Exception as e:
            logger.error(f"Error notifying user {user_id}: {e}")


async def send_announcements(context):
    """–†–∞—Å—Å—ã–ª–∫–∞ –∞–Ω–æ–Ω—Å–æ–≤"""
    await tasks.send_task_announcements(context)


async def text_message_router(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ MyCom –∑–∞–¥–∞–Ω–∏—è
    if await admin.handle_mycom_admin_input(update, context):
        return
    
    # –ó–∞—Ç–µ–º –æ–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–¥–∞–Ω–∏–π
    await tasks.handle_text_message(update, context)


def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    if not BOT_TOKEN:
        logger.error("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º job_queue
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    reg_handler = ConversationHandler(
        entry_points=[CommandHandler('reg', registration.reg_start)],
        states={
            REG_INSTAGRAM: [MessageHandler(filters.TEXT & ~filters.COMMAND, registration.reg_instagram)],
            REG_THREADS: [MessageHandler(filters.TEXT & ~filters.COMMAND, registration.reg_threads)],
            REG_GENDER: [CallbackQueryHandler(registration.reg_gender, pattern='^gender_')],
            REG_AGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, registration.reg_age)],
        },
        fallbacks=[CommandHandler('cancel', registration.cancel)]
    )
    
    # –ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    application.add_handler(CommandHandler('start', commands.start))
    application.add_handler(reg_handler)
    application.add_handler(CommandHandler('daily', commands.daily))
    application.add_handler(CommandHandler('help', commands.help_command))
    application.add_handler(CommandHandler('pool', commands.pool))
    application.add_handler(CommandHandler('stats', commands.stats))
    application.add_handler(CommandHandler('top', commands.top))
    application.add_handler(CommandHandler('check', commands.check))
    application.add_handler(CommandHandler('randompool', commands.randompool))
    application.add_handler(CommandHandler('addusdt', commands.addusdt))
    application.add_handler(CommandHandler('donate', commands.donate))
    application.add_handler(CommandHandler('onanons', commands.onanons))
    application.add_handler(CommandHandler('offanons', commands.offanons))
    
    # –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã
    application.add_handler(CommandHandler('limit', admin.admin_limit))
    application.add_handler(CommandHandler('balance', admin.admin_balance))
    application.add_handler(CommandHandler('trixikichange', admin.admin_trixikichange))
    application.add_handler(CommandHandler('trixikiadd', admin.admin_trixikiadd))
    application.add_handler(CommandHandler('localgirls', admin.admin_localgirls))
    application.add_handler(CommandHandler('localboys', admin.admin_localboys))
    application.add_handler(CommandHandler('liketimeon', admin.admin_liketimeon))
    application.add_handler(CommandHandler('liketimeoff', admin.admin_liketimeoff))
    application.add_handler(CommandHandler('giftstart', admin.giftstart))
    application.add_handler(CommandHandler('mycomadminadd', admin.mycomadminadd))
    
    # Callback handlers
    application.add_handler(CallbackQueryHandler(callbacks.callback_router))
    
    # –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    application.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND,
        text_message_router
    ))
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ job queue –¥–ª—è –æ–±—Ö–æ–¥–∞ –æ—à–∏–±–∫–∏
    logger.warning("JobQueue –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ weak reference")
    
    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ asyncio
    # –í–º–µ—Å—Ç–æ job queue –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ asyncio –∑–∞–¥–∞—á–∏
    
    logger.info("üöÄ Trixiki Bot –∑–∞–ø—É—â–µ–Ω!")
    logger.info(f"üìä –ê–¥–º–∏–Ω –≥—Ä—É–ø–ø–∞: {ADMIN_GROUP_ID}")
    
    # –ó–∞–ø—É—Å–∫ polling
    application.run_polling(
        allowed_updates=['message', 'callback_query'],
        close_loop=False
    )


if __name__ == '__main__':
    main()
